Introduction to Source Control
Hacktoberfest 2018 Edition
18 Oct 2018

Daniel Rollins & David Jimenez
CodeUp Leeds

* Why is Version Control Important?

As a project grows and becomes more complex we need some way to robustly handle:

- Versioning
- Rolling back Changes
- Collaboration
- Back ups

: Versioning: Knowing exactly what's in a particular release
: Rolling Back Changes: Easily undo mistakes or uneeded changes
: Collaboration: Most projects don't just have on person working on them
: Back ups: You really don't want to lose your hard work.

* Is this Version Control?

.image img/not_source_control.png 500 _

: Technically yes. But it's cumbersome and error prone.
: Difficult to tell what differences there are between two versions.

* What is Version Control Software

.image img/git-logo.png

Version Control Software (VCS) is a set of tools for managing changes to a set of files.

It is used in many software projects to manage source code and is often called Source Code Management (SCM) or Revision Control

There are many notable examples of Version Control Software however we are going to one of most popular in this workshop - Git.

* Advangates of Version Control Software

- Single source of truth
- Highly granular change history
- Easily view differences between versions
- Tools to aid collaboration

: Show example of each in presentation repository
: Just the one directory!
: git log
: git show
: Explain the concept of branches but we're not going to cover them today.

* Let's explore Git

: Show config
: Create a repository called hacktoberfest
: Add a README.md with hello world
: git diff
: git add
: git diff --staged
: git commit (Explain how to write a good commit message. Next slide!)

* Good commit messages

- Keep commits to a single logical change.
- 50 character subject in the imperative mood.
- Think "When applied, this commit will..."
- Elaborate on the change in a body after a blank line if needed.

    Remove the speed limiter in time-travel mode

    A plot device requires the DeLorean to travel at 88 mph in order to activate the Flux Capacitor.
    The safety speed limiter is disabled when running in time-travel mode in order to fulfil the
    director's vision. This does not affect cruising mode.

: git log
: git show

* Cheatsheet 1

Download Git & open your terminal

Set name and email for commit messages

    git config --global user.name "Daniel J. Rollins"
    git config --global user.email "daniel@djrollins.com"

Create a new repository

    mkdir hacktoberfest-2018
    cd hacktoberfest-2018
    git init

Add a file and add some content

   echo Hello World! > README.md

* Cheatsheet 2

View your changes

    git diff

Stage changes

    git add README.md

View the staged changes

    git diff --staged

Commit your changes

    git commit

View commit details

    git log
    git show

* Publishing Code

A git repository that only we can work on is not very useful.

We need to publish our repository somewhere on the Internet so others can download our software and make changes to it.

But where?

.image img/GitNoPush.png

* GitHub

.image img/Octocat.jpg 200 250

GitHub is the most popular, free code hosting platform.

The CodeUp Leeds website is hosted here along with many other software projects.

.link https://github.com github.com

* Creating a Repository

You can create unlimited, public git repositories on GitHub.

- Create a GitHub account if you have not done so already.
- Create a new repository

.image img/CreateGithubRepo.png 380 600

* Uploading Our Code to GitHub

Once we've created a repository on GitHub, we can point our local git repo to it by using its GitHub git address.

    git remote add origin git@github.com:codeupleeds/intro_to_scm.git

Then we can _push_ our code to it

    git push --set-upstream origin master

.image img/GitPullPush.png 300 800

* Cheatsheet

Set origin

    git remote add origin git@github.com:<repo_url>

Set origin as our default push target

    git push --set-upstream origin master

From here on, we can simply write the following to publish our latest changes

    git push

: Exercise: sign up on GitHub, create a new repository, push local git repo

* Contributing to existing software projects

You can download git repositories uploaded by others to GitHub into your computer by cloning them.

    git clone git@github.com:codeupleeds/codeupleeds.github.io.git

.image img/GithubCloneDiagram.png

* Forking

On GitHub, you can fork any public repository to create a verbatim copy of it that you own and can freely change.

If you want to incorporate your changes into the original project, you raise a pull request, which is a request to merge the changes you made in your fork into it.

- Configure git to to sync your fork with the original repository

    git remote add upstream https://github.com/codeupleeds/codeupleeds.github.io.git

- Push your changes up to your fork

    git push

- Raise a Pull Request on GitHub to let the original authors know you would like them to add your changes to the original repo (upstream)

: Merge pull request into CodeUp Leeds website.

* Basic Workflow

.image img/GithubFlowDiagram.png

* Hacktoberfest 2018

.image img/HacktoberfestLogo.png 200 250

Annual celebration of open source.

- Submit *5*pull*requests* between the *1st*and*31st*October* and win a free T-shirt!
- Any public GitHub repo is eligible to receive pull requests
- Your pull request doesn't need to be accepted to be counted

Register here to get started:

.link https://hacktoberfest.digitalocean.com/

* Adding your own page to the CodeUp Leeds website

- Visit the CodeUp Leeds GitHub repo

.link https://github.com/codeupleeds/codeupleeds.github.io

- Fork the repository
- Clone your fork
- Add your own page: copy it from `template.html`
- Commit your change and push it to your fork
- Raise a pull request

* Cheatsheet

Clone your fork

    git clone git@github.com/<yourusername>/codeupleeds.github.io

Create your own page

    cp template.html newpage.html

Stage the new page

    git add newpage.html

Create commit

    git commit -m "Add new page"

Push your changes to your fork

    git push -u origin HEAD

